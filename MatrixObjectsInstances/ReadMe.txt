A) How to create a maven project

    1. Open the main folder where you want the project to be in
    2. Ctl + shit + p to open pallete
    3. Maven create project and select maven-archetype-quickstart
    4. GroupID = com.companyname.projectname, ArtifactID = projectname, press enter for version, 
        enter package name, press y for confirm
    5. Open the folder from file -> open folder
    6. Add folder to workspace. File -> Add folder to workspace
    7. Create a tasks.json file
    8. Add a compile element to the file
        {
        "label": "compile",
        "type": "shell",
        "command": "mvn -B compile",
        "group": "build"
        }

B) Code as you wish making src files in the folder and a test file in the testing folder
    (there should be an autogenerated project so just put your files in there too)

How to do testing
    1. Change these in the pom.xml
        <dependencies>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>5.4.2</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>5.4.2</version>
                <scope>test</scope>
             </dependency>
        </dependencies>

        <build>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.22.1</version>
                </plugin>
            </plugins>
        </build>
    2. In your testing file, make sure the file name has the word "Test" at the end or beginning of the file
    3. Add a package declaration if necessary and these imports if working with assertions and jupiter junit
        import org.junit.jupiter.api.Test;
        import static org.junit.jupiter.api.Assertions.*;
    4. Add your testing methods once again following the naming scheme of adding "Test" at the end or beginning of the method name
    5. Add an @Test right before the method so it knows its a test method.
    6. At the bottom of your projects, click maven and right click on your maven project and press test and look at terminal for results.
